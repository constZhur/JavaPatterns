

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'
}

application {
    // Define the main class for the application.
    mainClass = 'practice9.app.src.main.java.practice9.App'
}

jar {
    manifest {
        attributes "Main-Class" : "practice9.app.src.main.java.practice9.App"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}

task copyJar(type: Copy) {
    println "Copying jar"
    dependsOn 'jar'
    from jar
    into file("$rootDir/app/src/main/resources/")
}

task removeJar(type: Delete) {
    println "Removing jar"
    delete file("$rootDir/app/src/main/resources/app.jar")
}

task buildImage(type: Exec) {
    println "Building image"
    dependsOn 'copyJar'
    finalizedBy 'removeJar'
    commandLine 'docker', 'practice12.build', '-t', 'app.jar', './src/main/resources/'
}

task runDocker(type: Exec) {
    println "Running docker"
    dependsOn 'buildImage'
    finalizedBy 'removeContainer'
    commandLine 'docker', 'run', '--name', 'app', 'app.jar'
}

task removeContainer(type: Exec) {
    println "Removing container"
    finalizedBy 'removeImage'
    commandLine 'docker', 'container', 'rm', 'app'
}

task removeImage(type: Exec) {
    println "Removing image"
    commandLine 'docker', 'image', 'rm', 'app.jar'
}